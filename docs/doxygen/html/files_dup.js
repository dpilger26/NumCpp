var files_dup =
[
    [ "abs.hpp", "abs_8hpp.html", "abs_8hpp" ],
    [ "add.hpp", "add_8hpp.html", "add_8hpp" ],
    [ "addBoundary1d.hpp", "add_boundary1d_8hpp.html", "add_boundary1d_8hpp" ],
    [ "addBoundary2d.hpp", "add_boundary2d_8hpp.html", "add_boundary2d_8hpp" ],
    [ "AER.hpp", "_a_e_r_8hpp.html", "_a_e_r_8hpp" ],
    [ "AERtoECEF.hpp", "_a_e_rto_e_c_e_f_8hpp.html", "_a_e_rto_e_c_e_f_8hpp" ],
    [ "AERtoENU.hpp", "_a_e_rto_e_n_u_8hpp.html", "_a_e_rto_e_n_u_8hpp" ],
    [ "AERtoLLA.hpp", "_a_e_rto_l_l_a_8hpp.html", "_a_e_rto_l_l_a_8hpp" ],
    [ "AERtoNED.hpp", "_a_e_rto_n_e_d_8hpp.html", "_a_e_rto_n_e_d_8hpp" ],
    [ "airy_ai.hpp", "airy__ai_8hpp.html", "airy__ai_8hpp" ],
    [ "airy_ai_prime.hpp", "airy__ai__prime_8hpp.html", "airy__ai__prime_8hpp" ],
    [ "airy_bi.hpp", "airy__bi_8hpp.html", "airy__bi_8hpp" ],
    [ "airy_bi_prime.hpp", "airy__bi__prime_8hpp.html", "airy__bi__prime_8hpp" ],
    [ "alen.hpp", "alen_8hpp.html", "alen_8hpp" ],
    [ "all.hpp", "all_8hpp.html", "all_8hpp" ],
    [ "allclose.hpp", "allclose_8hpp.html", "allclose_8hpp" ],
    [ "amax.hpp", "amax_8hpp.html", "amax_8hpp" ],
    [ "amin.hpp", "amin_8hpp.html", "amin_8hpp" ],
    [ "angle.hpp", "angle_8hpp.html", "angle_8hpp" ],
    [ "any.hpp", "any_8hpp.html", "any_8hpp" ],
    [ "append.hpp", "append_8hpp.html", "append_8hpp" ],
    [ "applyFunction.hpp", "apply_function_8hpp.html", "apply_function_8hpp" ],
    [ "applyPoly1d.hpp", "apply_poly1d_8hpp.html", "apply_poly1d_8hpp" ],
    [ "applyThreshold.hpp", "apply_threshold_8hpp.html", "apply_threshold_8hpp" ],
    [ "arange.hpp", "arange_8hpp.html", "arange_8hpp" ],
    [ "arccos.hpp", "arccos_8hpp.html", "arccos_8hpp" ],
    [ "arccosh.hpp", "arccosh_8hpp.html", "arccosh_8hpp" ],
    [ "arcsin.hpp", "arcsin_8hpp.html", "arcsin_8hpp" ],
    [ "arcsinh.hpp", "arcsinh_8hpp.html", "arcsinh_8hpp" ],
    [ "arctan.hpp", "arctan_8hpp.html", "arctan_8hpp" ],
    [ "arctan2.hpp", "arctan2_8hpp.html", "arctan2_8hpp" ],
    [ "arctanh.hpp", "arctanh_8hpp.html", "arctanh_8hpp" ],
    [ "argmax.hpp", "argmax_8hpp.html", "argmax_8hpp" ],
    [ "argmin.hpp", "argmin_8hpp.html", "argmin_8hpp" ],
    [ "argsort.hpp", "argsort_8hpp.html", "argsort_8hpp" ],
    [ "argwhere.hpp", "argwhere_8hpp.html", "argwhere_8hpp" ],
    [ "around.hpp", "around_8hpp.html", "around_8hpp" ],
    [ "array_equal.hpp", "array__equal_8hpp.html", "array__equal_8hpp" ],
    [ "array_equiv.hpp", "array__equiv_8hpp.html", "array__equiv_8hpp" ],
    [ "asarray.hpp", "asarray_8hpp.html", "asarray_8hpp" ],
    [ "astype.hpp", "astype_8hpp.html", "astype_8hpp" ],
    [ "average.hpp", "average_8hpp.html", "average_8hpp" ],
    [ "bartlett.hpp", "bartlett_8hpp.html", "bartlett_8hpp" ],
    [ "Random/bernoulli.hpp", "_random_2bernoulli_8hpp.html", "_random_2bernoulli_8hpp" ],
    [ "Special/bernoulli.hpp", "_special_2bernoulli_8hpp.html", "_special_2bernoulli_8hpp" ],
    [ "bessel_in.hpp", "bessel__in_8hpp.html", "bessel__in_8hpp" ],
    [ "bessel_in_prime.hpp", "bessel__in__prime_8hpp.html", "bessel__in__prime_8hpp" ],
    [ "bessel_jn.hpp", "bessel__jn_8hpp.html", "bessel__jn_8hpp" ],
    [ "bessel_jn_prime.hpp", "bessel__jn__prime_8hpp.html", "bessel__jn__prime_8hpp" ],
    [ "bessel_kn.hpp", "bessel__kn_8hpp.html", "bessel__kn_8hpp" ],
    [ "bessel_kn_prime.hpp", "bessel__kn__prime_8hpp.html", "bessel__kn__prime_8hpp" ],
    [ "bessel_yn.hpp", "bessel__yn_8hpp.html", "bessel__yn_8hpp" ],
    [ "bessel_yn_prime.hpp", "bessel__yn__prime_8hpp.html", "bessel__yn__prime_8hpp" ],
    [ "Random/beta.hpp", "_random_2beta_8hpp.html", "_random_2beta_8hpp" ],
    [ "Special/beta.hpp", "_special_2beta_8hpp.html", "_special_2beta_8hpp" ],
    [ "BinaryLogger.hpp", "_binary_logger_8hpp.html", "_binary_logger_8hpp" ],
    [ "binaryRepr.hpp", "binary_repr_8hpp.html", "binary_repr_8hpp" ],
    [ "bincount.hpp", "bincount_8hpp.html", "bincount_8hpp" ],
    [ "binomial.hpp", "binomial_8hpp.html", "binomial_8hpp" ],
    [ "Bisection.hpp", "_bisection_8hpp.html", [
      [ "Bisection", "classnc_1_1roots_1_1_bisection.html", "classnc_1_1roots_1_1_bisection" ]
    ] ],
    [ "bit_count.hpp", "bit__count_8hpp.html", "bit__count_8hpp" ],
    [ "bitwise_and.hpp", "bitwise__and_8hpp.html", "bitwise__and_8hpp" ],
    [ "bitwise_not.hpp", "bitwise__not_8hpp.html", "bitwise__not_8hpp" ],
    [ "bitwise_or.hpp", "bitwise__or_8hpp.html", "bitwise__or_8hpp" ],
    [ "bitwise_xor.hpp", "bitwise__xor_8hpp.html", "bitwise__xor_8hpp" ],
    [ "blackman.hpp", "blackman_8hpp.html", "blackman_8hpp" ],
    [ "BoostInterface.hpp", "_boost_interface_8hpp.html", null ],
    [ "BoostNumpyNdarrayHelper.hpp", "_boost_numpy_ndarray_helper_8hpp.html", null ],
    [ "Boundary.hpp", "_boundary_8hpp.html", "_boundary_8hpp" ],
    [ "Brent.hpp", "_brent_8hpp.html", [
      [ "Brent", "classnc_1_1roots_1_1_brent.html", "classnc_1_1roots_1_1_brent" ]
    ] ],
    [ "byteswap.hpp", "byteswap_8hpp.html", "byteswap_8hpp" ],
    [ "Cartesian.hpp", "_cartesian_8hpp.html", "_cartesian_8hpp" ],
    [ "cauchy.hpp", "cauchy_8hpp.html", "cauchy_8hpp" ],
    [ "cbrt.hpp", "cbrt_8hpp.html", "cbrt_8hpp" ],
    [ "ceil.hpp", "ceil_8hpp.html", "ceil_8hpp" ],
    [ "Celestial.hpp", "_celestial_8hpp.html", [
      [ "Celestial", "classnc_1_1coordinates_1_1reference__frames_1_1_celestial.html", "classnc_1_1coordinates_1_1reference__frames_1_1_celestial" ],
      [ "Dec", "classnc_1_1coordinates_1_1reference__frames_1_1_dec.html", "classnc_1_1coordinates_1_1reference__frames_1_1_dec" ],
      [ "RA", "classnc_1_1coordinates_1_1reference__frames_1_1_r_a.html", "classnc_1_1coordinates_1_1reference__frames_1_1_r_a" ]
    ] ],
    [ "centerOfMass.hpp", "center_of_mass_8hpp.html", "center_of_mass_8hpp" ],
    [ "Centroid.hpp", "_centroid_8hpp.html", [
      [ "Centroid", "classnc_1_1image_processing_1_1_centroid.html", "classnc_1_1image_processing_1_1_centroid" ]
    ] ],
    [ "centroidClusters.hpp", "centroid_clusters_8hpp.html", "centroid_clusters_8hpp" ],
    [ "chebyshev_t.hpp", "chebyshev__t_8hpp.html", "chebyshev__t_8hpp" ],
    [ "chebyshev_u.hpp", "chebyshev__u_8hpp.html", "chebyshev__u_8hpp" ],
    [ "chiSquare.hpp", "chi_square_8hpp.html", "chi_square_8hpp" ],
    [ "choice.hpp", "choice_8hpp.html", "choice_8hpp" ],
    [ "cholesky.hpp", "cholesky_8hpp.html", "cholesky_8hpp" ],
    [ "clip.hpp", "clip_8hpp.html", "clip_8hpp" ],
    [ "Clock.hpp", "_clock_8hpp.html", "_clock_8hpp" ],
    [ "Cluster.hpp", "_cluster_8hpp.html", [
      [ "Cluster", "classnc_1_1image_processing_1_1_cluster.html", "classnc_1_1image_processing_1_1_cluster" ]
    ] ],
    [ "ClusterMaker.hpp", "_cluster_maker_8hpp.html", [
      [ "ClusterMaker", "classnc_1_1image_processing_1_1_cluster_maker.html", "classnc_1_1image_processing_1_1_cluster_maker" ]
    ] ],
    [ "clusterPixels.hpp", "cluster_pixels_8hpp.html", "cluster_pixels_8hpp" ],
    [ "cnr.hpp", "cnr_8hpp.html", "cnr_8hpp" ],
    [ "column_stack.hpp", "column__stack_8hpp.html", "column__stack_8hpp" ],
    [ "comp_ellint_1.hpp", "comp__ellint__1_8hpp.html", "comp__ellint__1_8hpp" ],
    [ "comp_ellint_2.hpp", "comp__ellint__2_8hpp.html", "comp__ellint__2_8hpp" ],
    [ "comp_ellint_3.hpp", "comp__ellint__3_8hpp.html", "comp__ellint__3_8hpp" ],
    [ "complementaryMedianFilter.hpp", "complementary_median_filter_8hpp.html", "complementary_median_filter_8hpp" ],
    [ "complementaryMedianFilter1d.hpp", "complementary_median_filter1d_8hpp.html", "complementary_median_filter1d_8hpp" ],
    [ "complex.hpp", "complex_8hpp.html", "complex_8hpp" ],
    [ "concatenate.hpp", "concatenate_8hpp.html", "concatenate_8hpp" ],
    [ "conj.hpp", "conj_8hpp.html", "conj_8hpp" ],
    [ "constant1d.hpp", "constant1d_8hpp.html", "constant1d_8hpp" ],
    [ "constant2d.hpp", "constant2d_8hpp.html", "constant2d_8hpp" ],
    [ "Coordinates/ReferenceFrames/Constants.hpp", "_coordinates_2_reference_frames_2_constants_8hpp.html", "_coordinates_2_reference_frames_2_constants_8hpp" ],
    [ "Core/Constants.hpp", "_core_2_constants_8hpp.html", "_core_2_constants_8hpp" ],
    [ "contains.hpp", "contains_8hpp.html", "contains_8hpp" ],
    [ "convolve.hpp", "convolve_8hpp.html", "convolve_8hpp" ],
    [ "convolve1d.hpp", "convolve1d_8hpp.html", "convolve1d_8hpp" ],
    [ "Coordinates.hpp", "_coordinates_8hpp.html", null ],
    [ "copy.hpp", "copy_8hpp.html", "copy_8hpp" ],
    [ "copySign.hpp", "copy_sign_8hpp.html", "copy_sign_8hpp" ],
    [ "copyto.hpp", "copyto_8hpp.html", "copyto_8hpp" ],
    [ "Core.hpp", "_core_8hpp.html", null ],
    [ "corrcoef.hpp", "corrcoef_8hpp.html", "corrcoef_8hpp" ],
    [ "cos.hpp", "cos_8hpp.html", "cos_8hpp" ],
    [ "cosh.hpp", "cosh_8hpp.html", "cosh_8hpp" ],
    [ "count_nonzero.hpp", "count__nonzero_8hpp.html", "count__nonzero_8hpp" ],
    [ "cov.hpp", "cov_8hpp.html", "cov_8hpp" ],
    [ "cov_inv.hpp", "cov__inv_8hpp.html", "cov__inv_8hpp" ],
    [ "cross.hpp", "cross_8hpp.html", "cross_8hpp" ],
    [ "Functions/cube.hpp", "_functions_2cube_8hpp.html", "_functions_2cube_8hpp" ],
    [ "Utils/cube.hpp", "_utils_2cube_8hpp.html", "_utils_2cube_8hpp" ],
    [ "cumprod.hpp", "cumprod_8hpp.html", "cumprod_8hpp" ],
    [ "cumsum.hpp", "cumsum_8hpp.html", "cumsum_8hpp" ],
    [ "cyclic_hankel_1.hpp", "cyclic__hankel__1_8hpp.html", "cyclic__hankel__1_8hpp" ],
    [ "cyclic_hankel_2.hpp", "cyclic__hankel__2_8hpp.html", "cyclic__hankel__2_8hpp" ],
    [ "DataCube.hpp", "_data_cube_8hpp.html", [
      [ "DataCube", "classnc_1_1_data_cube.html", "classnc_1_1_data_cube" ]
    ] ],
    [ "DateTime/DateTime.hpp", "_date_time_2_date_time_8hpp.html", "_date_time_2_date_time_8hpp" ],
    [ "DateTime.hpp", "_date_time_8hpp.html", null ],
    [ "DCM.hpp", "_d_c_m_8hpp.html", [
      [ "DCM", "classnc_1_1rotations_1_1_d_c_m.html", "classnc_1_1rotations_1_1_d_c_m" ]
    ] ],
    [ "deg2rad.hpp", "deg2rad_8hpp.html", "deg2rad_8hpp" ],
    [ "degrees.hpp", "degrees_8hpp.html", "degrees_8hpp" ],
    [ "Dekker.hpp", "_dekker_8hpp.html", [
      [ "Dekker", "classnc_1_1roots_1_1_dekker.html", "classnc_1_1roots_1_1_dekker" ]
    ] ],
    [ "deleteIndices.hpp", "delete_indices_8hpp.html", "delete_indices_8hpp" ],
    [ "det.hpp", "det_8hpp.html", "det_8hpp" ],
    [ "diag.hpp", "diag_8hpp.html", "diag_8hpp" ],
    [ "diagflat.hpp", "diagflat_8hpp.html", "diagflat_8hpp" ],
    [ "diagonal.hpp", "diagonal_8hpp.html", "diagonal_8hpp" ],
    [ "diff.hpp", "diff_8hpp.html", "diff_8hpp" ],
    [ "digamma.hpp", "digamma_8hpp.html", "digamma_8hpp" ],
    [ "digitize.hpp", "digitize_8hpp.html", "digitize_8hpp" ],
    [ "discrete.hpp", "discrete_8hpp.html", "discrete_8hpp" ],
    [ "divide.hpp", "divide_8hpp.html", "divide_8hpp" ],
    [ "dot.hpp", "dot_8hpp.html", "dot_8hpp" ],
    [ "DtypeInfo.hpp", "_dtype_info_8hpp.html", [
      [ "DtypeInfo", "classnc_1_1_dtype_info.html", "classnc_1_1_dtype_info" ],
      [ "DtypeInfo< std::complex< dtype > >", "classnc_1_1_dtype_info_3_01std_1_1complex_3_01dtype_01_4_01_4.html", "classnc_1_1_dtype_info_3_01std_1_1complex_3_01dtype_01_4_01_4" ]
    ] ],
    [ "dump.hpp", "dump_8hpp.html", "dump_8hpp" ],
    [ "ECEF.hpp", "_e_c_e_f_8hpp.html", [
      [ "ECEF", "classnc_1_1coordinates_1_1reference__frames_1_1_e_c_e_f.html", "classnc_1_1coordinates_1_1reference__frames_1_1_e_c_e_f" ]
    ] ],
    [ "ECEFEulerToENURollPitchYaw.hpp", "_e_c_e_f_euler_to_e_n_u_roll_pitch_yaw_8hpp.html", "_e_c_e_f_euler_to_e_n_u_roll_pitch_yaw_8hpp" ],
    [ "ECEFEulerToNEDRollPitchYaw.hpp", "_e_c_e_f_euler_to_n_e_d_roll_pitch_yaw_8hpp.html", "_e_c_e_f_euler_to_n_e_d_roll_pitch_yaw_8hpp" ],
    [ "ECEFtoAER.hpp", "_e_c_e_fto_a_e_r_8hpp.html", "_e_c_e_fto_a_e_r_8hpp" ],
    [ "ECEFtoENU.hpp", "_e_c_e_fto_e_n_u_8hpp.html", "_e_c_e_fto_e_n_u_8hpp" ],
    [ "ECEFtoLLA.hpp", "_e_c_e_fto_l_l_a_8hpp.html", "_e_c_e_fto_l_l_a_8hpp" ],
    [ "ECEFtoNED.hpp", "_e_c_e_fto_n_e_d_8hpp.html", "_e_c_e_fto_n_e_d_8hpp" ],
    [ "ellint_1.hpp", "ellint__1_8hpp.html", "ellint__1_8hpp" ],
    [ "ellint_2.hpp", "ellint__2_8hpp.html", "ellint__2_8hpp" ],
    [ "ellint_3.hpp", "ellint__3_8hpp.html", "ellint__3_8hpp" ],
    [ "empty.hpp", "empty_8hpp.html", "empty_8hpp" ],
    [ "empty_like.hpp", "empty__like_8hpp.html", "empty__like_8hpp" ],
    [ "Endian.hpp", "_endian_8hpp.html", "_endian_8hpp" ],
    [ "endianess.hpp", "endianess_8hpp.html", "endianess_8hpp" ],
    [ "ENU.hpp", "_e_n_u_8hpp.html", "_e_n_u_8hpp" ],
    [ "ENURollPitchYawToECEFEuler.hpp", "_e_n_u_roll_pitch_yaw_to_e_c_e_f_euler_8hpp.html", "_e_n_u_roll_pitch_yaw_to_e_c_e_f_euler_8hpp" ],
    [ "ENUtoAER.hpp", "_e_n_uto_a_e_r_8hpp.html", "_e_n_uto_a_e_r_8hpp" ],
    [ "ENUtoECEF.hpp", "_e_n_uto_e_c_e_f_8hpp.html", "_e_n_uto_e_c_e_f_8hpp" ],
    [ "ENUtoLLA.hpp", "_e_n_uto_l_l_a_8hpp.html", "_e_n_uto_l_l_a_8hpp" ],
    [ "ENUtoNED.hpp", "_e_n_uto_n_e_d_8hpp.html", "_e_n_uto_n_e_d_8hpp" ],
    [ "ENUUnitVecsInECEF.hpp", "_e_n_u_unit_vecs_in_e_c_e_f_8hpp.html", "_e_n_u_unit_vecs_in_e_c_e_f_8hpp" ],
    [ "equal.hpp", "equal_8hpp.html", "equal_8hpp" ],
    [ "erf.hpp", "erf_8hpp.html", "erf_8hpp" ],
    [ "erf_inv.hpp", "erf__inv_8hpp.html", "erf__inv_8hpp" ],
    [ "erfc.hpp", "erfc_8hpp.html", "erfc_8hpp" ],
    [ "erfc_inv.hpp", "erfc__inv_8hpp.html", "erfc__inv_8hpp" ],
    [ "Error.hpp", "_error_8hpp.html", "_error_8hpp" ],
    [ "essentiallyEqual.hpp", "essentially_equal_8hpp.html", "essentially_equal_8hpp" ],
    [ "essentiallyEqualComplex.hpp", "essentially_equal_complex_8hpp.html", "essentially_equal_complex_8hpp" ],
    [ "Euler.hpp", "_euler_8hpp.html", "_euler_8hpp" ],
    [ "exp.hpp", "exp_8hpp.html", "exp_8hpp" ],
    [ "exp2.hpp", "exp2_8hpp.html", "exp2_8hpp" ],
    [ "expint.hpp", "expint_8hpp.html", "expint_8hpp" ],
    [ "expm1.hpp", "expm1_8hpp.html", "expm1_8hpp" ],
    [ "exponential.hpp", "exponential_8hpp.html", "exponential_8hpp" ],
    [ "extract.hpp", "extract_8hpp.html", "extract_8hpp" ],
    [ "extremeValue.hpp", "extreme_value_8hpp.html", "extreme_value_8hpp" ],
    [ "eye.hpp", "eye_8hpp.html", "eye_8hpp" ],
    [ "f.hpp", "f_8hpp.html", "f_8hpp" ],
    [ "factorial.hpp", "factorial_8hpp.html", "factorial_8hpp" ],
    [ "fillCorners.hpp", "fill_corners_8hpp.html", "fill_corners_8hpp" ],
    [ "fillDiagnol.hpp", "fill_diagnol_8hpp.html", "fill_diagnol_8hpp" ],
    [ "Filter.hpp", "_filter_8hpp.html", null ],
    [ "find.hpp", "find_8hpp.html", "find_8hpp" ],
    [ "fix.hpp", "fix_8hpp.html", "fix_8hpp" ],
    [ "flatnonzero.hpp", "flatnonzero_8hpp.html", "flatnonzero_8hpp" ],
    [ "flatten.hpp", "flatten_8hpp.html", "flatten_8hpp" ],
    [ "flip.hpp", "flip_8hpp.html", "flip_8hpp" ],
    [ "fliplr.hpp", "fliplr_8hpp.html", "fliplr_8hpp" ],
    [ "flipud.hpp", "flipud_8hpp.html", "flipud_8hpp" ],
    [ "floor.hpp", "floor_8hpp.html", "floor_8hpp" ],
    [ "floor_divide.hpp", "floor__divide_8hpp.html", "floor__divide_8hpp" ],
    [ "fmax.hpp", "fmax_8hpp.html", "fmax_8hpp" ],
    [ "fmin.hpp", "fmin_8hpp.html", "fmin_8hpp" ],
    [ "fmod.hpp", "fmod_8hpp.html", "fmod_8hpp" ],
    [ "frombuffer.hpp", "frombuffer_8hpp.html", "frombuffer_8hpp" ],
    [ "fromfile.hpp", "fromfile_8hpp.html", "fromfile_8hpp" ],
    [ "fromfunction.hpp", "fromfunction_8hpp.html", "fromfunction_8hpp" ],
    [ "fromiter.hpp", "fromiter_8hpp.html", "fromiter_8hpp" ],
    [ "fromstring.hpp", "fromstring_8hpp.html", "fromstring_8hpp" ],
    [ "full.hpp", "full_8hpp.html", "full_8hpp" ],
    [ "full_like.hpp", "full__like_8hpp.html", "full__like_8hpp" ],
    [ "Functions.hpp", "_functions_8hpp.html", null ],
    [ "Random/gamma.hpp", "_random_2gamma_8hpp.html", "_random_2gamma_8hpp" ],
    [ "Special/gamma.hpp", "_special_2gamma_8hpp.html", "_special_2gamma_8hpp" ],
    [ "gamma1pm1.hpp", "gamma1pm1_8hpp.html", "gamma1pm1_8hpp" ],
    [ "gauss_legendre.hpp", "gauss__legendre_8hpp.html", "gauss__legendre_8hpp" ],
    [ "gaussian.hpp", "gaussian_8hpp.html", "gaussian_8hpp" ],
    [ "gaussian1d.hpp", "gaussian1d_8hpp.html", "gaussian1d_8hpp" ],
    [ "gaussianFilter.hpp", "gaussian_filter_8hpp.html", "gaussian_filter_8hpp" ],
    [ "gaussianFilter1d.hpp", "gaussian_filter1d_8hpp.html", "gaussian_filter1d_8hpp" ],
    [ "gaussNewtonNlls.hpp", "gauss_newton_nlls_8hpp.html", "gauss_newton_nlls_8hpp" ],
    [ "gcd.hpp", "gcd_8hpp.html", "gcd_8hpp" ],
    [ "generateCentroids.hpp", "generate_centroids_8hpp.html", "generate_centroids_8hpp" ],
    [ "generateThreshold.hpp", "generate_threshold_8hpp.html", "generate_threshold_8hpp" ],
    [ "generator.hpp", "generator_8hpp.html", "generator_8hpp" ],
    [ "Geocentric.hpp", "_geocentric_8hpp.html", "_geocentric_8hpp" ],
    [ "geocentricRadius.hpp", "geocentric_radius_8hpp.html", "geocentric_radius_8hpp" ],
    [ "geocentricToLLA.hpp", "geocentric_to_l_l_a_8hpp.html", "geocentric_to_l_l_a_8hpp" ],
    [ "geometric.hpp", "geometric_8hpp.html", "geometric_8hpp" ],
    [ "geomspace.hpp", "geomspace_8hpp.html", "geomspace_8hpp" ],
    [ "gradient.hpp", "gradient_8hpp.html", "gradient_8hpp" ],
    [ "greater.hpp", "greater_8hpp.html", "greater_8hpp" ],
    [ "greater_equal.hpp", "greater__equal_8hpp.html", "greater__equal_8hpp" ],
    [ "hamming.hpp", "hamming_8hpp.html", "hamming_8hpp" ],
    [ "hammingEncode.hpp", "hamming_encode_8hpp.html", "hamming_encode_8hpp" ],
    [ "hanning.hpp", "hanning_8hpp.html", "hanning_8hpp" ],
    [ "hat.hpp", "hat_8hpp.html", "hat_8hpp" ],
    [ "hermite.hpp", "hermite_8hpp.html", "hermite_8hpp" ],
    [ "histogram.hpp", "histogram_8hpp.html", "histogram_8hpp" ],
    [ "hsplit.hpp", "hsplit_8hpp.html", "hsplit_8hpp" ],
    [ "hstack.hpp", "hstack_8hpp.html", "hstack_8hpp" ],
    [ "hypot.hpp", "hypot_8hpp.html", "hypot_8hpp" ],
    [ "identity.hpp", "identity_8hpp.html", "identity_8hpp" ],
    [ "imag.hpp", "imag_8hpp.html", "imag_8hpp" ],
    [ "ImageProcessing.hpp", "_image_processing_8hpp.html", null ],
    [ "inner.hpp", "inner_8hpp.html", "inner_8hpp" ],
    [ "insert.hpp", "insert_8hpp.html", "insert_8hpp" ],
    [ "Integrate.hpp", "_integrate_8hpp.html", null ],
    [ "Functions/interp.hpp", "_functions_2interp_8hpp.html", "_functions_2interp_8hpp" ],
    [ "Utils/interp.hpp", "_utils_2interp_8hpp.html", "_utils_2interp_8hpp" ],
    [ "intersect1d.hpp", "intersect1d_8hpp.html", "intersect1d_8hpp" ],
    [ "inv.hpp", "inv_8hpp.html", "inv_8hpp" ],
    [ "invert.hpp", "invert_8hpp.html", "invert_8hpp" ],
    [ "isclose.hpp", "isclose_8hpp.html", "isclose_8hpp" ],
    [ "isinf.hpp", "isinf_8hpp.html", "isinf_8hpp" ],
    [ "isnan.hpp", "isnan_8hpp.html", "isnan_8hpp" ],
    [ "isneginf.hpp", "isneginf_8hpp.html", "isneginf_8hpp" ],
    [ "isposinf.hpp", "isposinf_8hpp.html", "isposinf_8hpp" ],
    [ "Iteration.hpp", "_iteration_8hpp.html", [
      [ "Iteration", "classnc_1_1roots_1_1_iteration.html", "classnc_1_1roots_1_1_iteration" ]
    ] ],
    [ "kaiser.hpp", "kaiser_8hpp.html", "kaiser_8hpp" ],
    [ "laguerre.hpp", "laguerre_8hpp.html", "laguerre_8hpp" ],
    [ "Filter/Filters/Filters2d/laplace.hpp", "_filter_2_filters_2_filters2d_2laplace_8hpp.html", "_filter_2_filters_2_filters2d_2laplace_8hpp" ],
    [ "Random/laplace.hpp", "_random_2laplace_8hpp.html", "_random_2laplace_8hpp" ],
    [ "lcm.hpp", "lcm_8hpp.html", "lcm_8hpp" ],
    [ "ldexp.hpp", "ldexp_8hpp.html", "ldexp_8hpp" ],
    [ "left_shift.hpp", "left__shift_8hpp.html", "left__shift_8hpp" ],
    [ "legendre_p.hpp", "legendre__p_8hpp.html", "legendre__p_8hpp" ],
    [ "legendre_q.hpp", "legendre__q_8hpp.html", "legendre__q_8hpp" ],
    [ "less.hpp", "less_8hpp.html", "less_8hpp" ],
    [ "less_equal.hpp", "less__equal_8hpp.html", "less__equal_8hpp" ],
    [ "Linalg.hpp", "_linalg_8hpp.html", null ],
    [ "linspace.hpp", "linspace_8hpp.html", "linspace_8hpp" ],
    [ "LLA.hpp", "_l_l_a_8hpp.html", "_l_l_a_8hpp" ],
    [ "LLAtoAER.hpp", "_l_l_ato_a_e_r_8hpp.html", "_l_l_ato_a_e_r_8hpp" ],
    [ "LLAtoECEF.hpp", "_l_l_ato_e_c_e_f_8hpp.html", "_l_l_ato_e_c_e_f_8hpp" ],
    [ "LLAtoENU.hpp", "_l_l_ato_e_n_u_8hpp.html", "_l_l_ato_e_n_u_8hpp" ],
    [ "LLAtoGeocentric.hpp", "_l_l_ato_geocentric_8hpp.html", "_l_l_ato_geocentric_8hpp" ],
    [ "LLAtoNED.hpp", "_l_l_ato_n_e_d_8hpp.html", "_l_l_ato_n_e_d_8hpp" ],
    [ "load.hpp", "load_8hpp.html", "load_8hpp" ],
    [ "log.hpp", "log_8hpp.html", "log_8hpp" ],
    [ "log10.hpp", "log10_8hpp.html", "log10_8hpp" ],
    [ "log1p.hpp", "log1p_8hpp.html", "log1p_8hpp" ],
    [ "log2.hpp", "log2_8hpp.html", "log2_8hpp" ],
    [ "log_gamma.hpp", "log__gamma_8hpp.html", "log__gamma_8hpp" ],
    [ "logaddexp.hpp", "logaddexp_8hpp.html", "logaddexp_8hpp" ],
    [ "logaddexp2.hpp", "logaddexp2_8hpp.html", "logaddexp2_8hpp" ],
    [ "logb.hpp", "logb_8hpp.html", "logb_8hpp" ],
    [ "Logger.hpp", "_logger_8hpp.html", "_logger_8hpp" ],
    [ "Logging.hpp", "_logging_8hpp.html", null ],
    [ "logical_and.hpp", "logical__and_8hpp.html", "logical__and_8hpp" ],
    [ "logical_not.hpp", "logical__not_8hpp.html", "logical__not_8hpp" ],
    [ "logical_or.hpp", "logical__or_8hpp.html", "logical__or_8hpp" ],
    [ "logical_xor.hpp", "logical__xor_8hpp.html", "logical__xor_8hpp" ],
    [ "lognormal.hpp", "lognormal_8hpp.html", "lognormal_8hpp" ],
    [ "logspace.hpp", "logspace_8hpp.html", "logspace_8hpp" ],
    [ "lstsq.hpp", "lstsq_8hpp.html", "lstsq_8hpp" ],
    [ "lu_decomposition.hpp", "lu__decomposition_8hpp.html", "lu__decomposition_8hpp" ],
    [ "matmul.hpp", "matmul_8hpp.html", "matmul_8hpp" ],
    [ "matrix_power.hpp", "matrix__power_8hpp.html", "matrix__power_8hpp" ],
    [ "max.hpp", "max_8hpp.html", "max_8hpp" ],
    [ "maximum.hpp", "maximum_8hpp.html", "maximum_8hpp" ],
    [ "maximumFilter.hpp", "maximum_filter_8hpp.html", "maximum_filter_8hpp" ],
    [ "maximumFilter1d.hpp", "maximum_filter1d_8hpp.html", "maximum_filter1d_8hpp" ],
    [ "mean.hpp", "mean_8hpp.html", "mean_8hpp" ],
    [ "median.hpp", "median_8hpp.html", "median_8hpp" ],
    [ "medianFilter.hpp", "median_filter_8hpp.html", "median_filter_8hpp" ],
    [ "medianFilter1d.hpp", "median_filter1d_8hpp.html", "median_filter1d_8hpp" ],
    [ "meshgrid.hpp", "meshgrid_8hpp.html", "meshgrid_8hpp" ],
    [ "min.hpp", "min_8hpp.html", "min_8hpp" ],
    [ "minimum.hpp", "minimum_8hpp.html", "minimum_8hpp" ],
    [ "minimumFilter.hpp", "minimum_filter_8hpp.html", "minimum_filter_8hpp" ],
    [ "minimumFilter1d.hpp", "minimum_filter1d_8hpp.html", "minimum_filter1d_8hpp" ],
    [ "mirror1d.hpp", "mirror1d_8hpp.html", "mirror1d_8hpp" ],
    [ "mirror2d.hpp", "mirror2d_8hpp.html", "mirror2d_8hpp" ],
    [ "mod.hpp", "mod_8hpp.html", "mod_8hpp" ],
    [ "multi_dot.hpp", "multi__dot_8hpp.html", "multi__dot_8hpp" ],
    [ "multiply.hpp", "multiply_8hpp.html", "multiply_8hpp" ],
    [ "nan_to_num.hpp", "nan__to__num_8hpp.html", "nan__to__num_8hpp" ],
    [ "nanargmax.hpp", "nanargmax_8hpp.html", "nanargmax_8hpp" ],
    [ "nanargmin.hpp", "nanargmin_8hpp.html", "nanargmin_8hpp" ],
    [ "nancumprod.hpp", "nancumprod_8hpp.html", "nancumprod_8hpp" ],
    [ "nancumsum.hpp", "nancumsum_8hpp.html", "nancumsum_8hpp" ],
    [ "nanmax.hpp", "nanmax_8hpp.html", "nanmax_8hpp" ],
    [ "nanmean.hpp", "nanmean_8hpp.html", "nanmean_8hpp" ],
    [ "nanmedian.hpp", "nanmedian_8hpp.html", "nanmedian_8hpp" ],
    [ "nanmin.hpp", "nanmin_8hpp.html", "nanmin_8hpp" ],
    [ "nanpercentile.hpp", "nanpercentile_8hpp.html", "nanpercentile_8hpp" ],
    [ "nanprod.hpp", "nanprod_8hpp.html", "nanprod_8hpp" ],
    [ "nans.hpp", "nans_8hpp.html", "nans_8hpp" ],
    [ "nans_like.hpp", "nans__like_8hpp.html", "nans__like_8hpp" ],
    [ "nanstdev.hpp", "nanstdev_8hpp.html", "nanstdev_8hpp" ],
    [ "nansum.hpp", "nansum_8hpp.html", "nansum_8hpp" ],
    [ "nanvar.hpp", "nanvar_8hpp.html", "nanvar_8hpp" ],
    [ "nbytes.hpp", "nbytes_8hpp.html", "nbytes_8hpp" ],
    [ "NdArray.hpp", "_nd_array_8hpp.html", null ],
    [ "NdArrayBroadcast.hpp", "_nd_array_broadcast_8hpp.html", "_nd_array_broadcast_8hpp" ],
    [ "NdArrayCore.hpp", "_nd_array_core_8hpp.html", "_nd_array_core_8hpp" ],
    [ "NdArrayIterators.hpp", "_nd_array_iterators_8hpp.html", "_nd_array_iterators_8hpp" ],
    [ "NdArrayOperators.hpp", "_nd_array_operators_8hpp.html", "_nd_array_operators_8hpp" ],
    [ "nearest1d.hpp", "nearest1d_8hpp.html", "nearest1d_8hpp" ],
    [ "nearest2d.hpp", "nearest2d_8hpp.html", "nearest2d_8hpp" ],
    [ "NED.hpp", "_n_e_d_8hpp.html", [
      [ "NED", "classnc_1_1coordinates_1_1reference__frames_1_1_n_e_d.html", "classnc_1_1coordinates_1_1reference__frames_1_1_n_e_d" ]
    ] ],
    [ "NEDRollPitchYawToECEFEuler.hpp", "_n_e_d_roll_pitch_yaw_to_e_c_e_f_euler_8hpp.html", "_n_e_d_roll_pitch_yaw_to_e_c_e_f_euler_8hpp" ],
    [ "NEDtoAER.hpp", "_n_e_dto_a_e_r_8hpp.html", "_n_e_dto_a_e_r_8hpp" ],
    [ "NEDtoECEF.hpp", "_n_e_dto_e_c_e_f_8hpp.html", "_n_e_dto_e_c_e_f_8hpp" ],
    [ "NEDtoENU.hpp", "_n_e_dto_e_n_u_8hpp.html", "_n_e_dto_e_n_u_8hpp" ],
    [ "NEDtoLLA.hpp", "_n_e_dto_l_l_a_8hpp.html", "_n_e_dto_l_l_a_8hpp" ],
    [ "NEDUnitVecsInECEF.hpp", "_n_e_d_unit_vecs_in_e_c_e_f_8hpp.html", "_n_e_d_unit_vecs_in_e_c_e_f_8hpp" ],
    [ "negative.hpp", "negative_8hpp.html", "negative_8hpp" ],
    [ "negativeBinomial.hpp", "negative_binomial_8hpp.html", "negative_binomial_8hpp" ],
    [ "newbyteorder.hpp", "newbyteorder_8hpp.html", "newbyteorder_8hpp" ],
    [ "Newton.hpp", "_newton_8hpp.html", [
      [ "Newton", "classnc_1_1roots_1_1_newton.html", "classnc_1_1roots_1_1_newton" ]
    ] ],
    [ "nonCentralChiSquared.hpp", "non_central_chi_squared_8hpp.html", "non_central_chi_squared_8hpp" ],
    [ "none.hpp", "none_8hpp.html", "none_8hpp" ],
    [ "nonzero.hpp", "nonzero_8hpp.html", "nonzero_8hpp" ],
    [ "norm.hpp", "norm_8hpp.html", "norm_8hpp" ],
    [ "normal.hpp", "normal_8hpp.html", "normal_8hpp" ],
    [ "normalize.hpp", "normalize_8hpp.html", "normalize_8hpp" ],
    [ "not_equal.hpp", "not__equal_8hpp.html", "not__equal_8hpp" ],
    [ "nth_root.hpp", "nth__root_8hpp.html", "nth__root_8hpp" ],
    [ "num2str.hpp", "num2str_8hpp.html", "num2str_8hpp" ],
    [ "NumCpp.hpp", "_num_cpp_8hpp.html", null ],
    [ "ones.hpp", "ones_8hpp.html", "ones_8hpp" ],
    [ "ones_like.hpp", "ones__like_8hpp.html", "ones__like_8hpp" ],
    [ "Orientation.hpp", "_orientation_8hpp.html", "_orientation_8hpp" ],
    [ "outer.hpp", "outer_8hpp.html", "outer_8hpp" ],
    [ "packbits.hpp", "packbits_8hpp.html", "packbits_8hpp" ],
    [ "pad.hpp", "pad_8hpp.html", "pad_8hpp" ],
    [ "partition.hpp", "partition_8hpp.html", "partition_8hpp" ],
    [ "percentile.hpp", "percentile_8hpp.html", "percentile_8hpp" ],
    [ "percentileFilter.hpp", "percentile_filter_8hpp.html", "percentile_filter_8hpp" ],
    [ "percentileFilter1d.hpp", "percentile_filter1d_8hpp.html", "percentile_filter1d_8hpp" ],
    [ "permutation.hpp", "permutation_8hpp.html", "permutation_8hpp" ],
    [ "pinv.hpp", "pinv_8hpp.html", "pinv_8hpp" ],
    [ "pivotLU_decomposition.hpp", "pivot_l_u__decomposition_8hpp.html", "pivot_l_u__decomposition_8hpp" ],
    [ "Pixel.hpp", "_pixel_8hpp.html", [
      [ "Pixel", "classnc_1_1image_processing_1_1_pixel.html", "classnc_1_1image_processing_1_1_pixel" ]
    ] ],
    [ "place.hpp", "place_8hpp.html", "place_8hpp" ],
    [ "pnr.hpp", "pnr_8hpp.html", "pnr_8hpp" ],
    [ "poisson.hpp", "poisson_8hpp.html", "poisson_8hpp" ],
    [ "polar.hpp", "polar_8hpp.html", "polar_8hpp" ],
    [ "Poly1d.hpp", "_poly1d_8hpp.html", [
      [ "Poly1d", "classnc_1_1polynomial_1_1_poly1d.html", "classnc_1_1polynomial_1_1_poly1d" ]
    ] ],
    [ "polygamma.hpp", "polygamma_8hpp.html", "polygamma_8hpp" ],
    [ "Polynomial.hpp", "_polynomial_8hpp.html", null ],
    [ "Functions/power.hpp", "_functions_2power_8hpp.html", "_functions_2power_8hpp" ],
    [ "Utils/power.hpp", "_utils_2power_8hpp.html", "_utils_2power_8hpp" ],
    [ "Functions/powerf.hpp", "_functions_2powerf_8hpp.html", "_functions_2powerf_8hpp" ],
    [ "Utils/powerf.hpp", "_utils_2powerf_8hpp.html", "_utils_2powerf_8hpp" ],
    [ "prime.hpp", "prime_8hpp.html", "prime_8hpp" ],
    [ "print.hpp", "print_8hpp.html", "print_8hpp" ],
    [ "prod.hpp", "prod_8hpp.html", "prod_8hpp" ],
    [ "proj.hpp", "proj_8hpp.html", "proj_8hpp" ],
    [ "ptp.hpp", "ptp_8hpp.html", "ptp_8hpp" ],
    [ "put.hpp", "put_8hpp.html", "put_8hpp" ],
    [ "putmask.hpp", "putmask_8hpp.html", "putmask_8hpp" ],
    [ "PybindInterface.hpp", "_pybind_interface_8hpp.html", null ],
    [ "PythonInterface.hpp", "_python_interface_8hpp.html", null ],
    [ "Quaternion.hpp", "_quaternion_8hpp.html", [
      [ "Quaternion", "classnc_1_1rotations_1_1_quaternion.html", "classnc_1_1rotations_1_1_quaternion" ]
    ] ],
    [ "rad2deg.hpp", "rad2deg_8hpp.html", "rad2deg_8hpp" ],
    [ "radians.hpp", "radians_8hpp.html", "radians_8hpp" ],
    [ "rand.hpp", "rand_8hpp.html", "rand_8hpp" ],
    [ "randFloat.hpp", "rand_float_8hpp.html", "rand_float_8hpp" ],
    [ "randInt.hpp", "rand_int_8hpp.html", "rand_int_8hpp" ],
    [ "randN.hpp", "rand_n_8hpp.html", "rand_n_8hpp" ],
    [ "Random.hpp", "_random_8hpp.html", null ],
    [ "rankFilter.hpp", "rank_filter_8hpp.html", "rank_filter_8hpp" ],
    [ "rankFilter1d.hpp", "rank_filter1d_8hpp.html", "rank_filter1d_8hpp" ],
    [ "ravel.hpp", "ravel_8hpp.html", "ravel_8hpp" ],
    [ "real.hpp", "real_8hpp.html", "real_8hpp" ],
    [ "reciprocal.hpp", "reciprocal_8hpp.html", "reciprocal_8hpp" ],
    [ "ReferenceFrames.hpp", "_reference_frames_8hpp.html", null ],
    [ "reflect1d.hpp", "reflect1d_8hpp.html", "reflect1d_8hpp" ],
    [ "reflect2d.hpp", "reflect2d_8hpp.html", "reflect2d_8hpp" ],
    [ "remainder.hpp", "remainder_8hpp.html", "remainder_8hpp" ],
    [ "repeat.hpp", "repeat_8hpp.html", "repeat_8hpp" ],
    [ "replace.hpp", "replace_8hpp.html", "replace_8hpp" ],
    [ "reshape.hpp", "reshape_8hpp.html", "reshape_8hpp" ],
    [ "resizeFast.hpp", "resize_fast_8hpp.html", "resize_fast_8hpp" ],
    [ "resizeSlow.hpp", "resize_slow_8hpp.html", "resize_slow_8hpp" ],
    [ "riemann_zeta.hpp", "riemann__zeta_8hpp.html", "riemann__zeta_8hpp" ],
    [ "right_shift.hpp", "right__shift_8hpp.html", "right__shift_8hpp" ],
    [ "rint.hpp", "rint_8hpp.html", "rint_8hpp" ],
    [ "rms.hpp", "rms_8hpp.html", "rms_8hpp" ],
    [ "RNG.hpp", "_r_n_g_8hpp.html", [
      [ "RNG", "classnc_1_1random_1_1_r_n_g.html", "classnc_1_1random_1_1_r_n_g" ]
    ] ],
    [ "rodriguesRotation.hpp", "rodrigues_rotation_8hpp.html", "rodrigues_rotation_8hpp" ],
    [ "roll.hpp", "roll_8hpp.html", "roll_8hpp" ],
    [ "romberg.hpp", "romberg_8hpp.html", "romberg_8hpp" ],
    [ "Roots.hpp", "_roots_8hpp.html", null ],
    [ "rot90.hpp", "rot90_8hpp.html", "rot90_8hpp" ],
    [ "Rotations.hpp", "_rotations_8hpp.html", null ],
    [ "round.hpp", "round_8hpp.html", "round_8hpp" ],
    [ "row_stack.hpp", "row__stack_8hpp.html", "row__stack_8hpp" ],
    [ "Secant.hpp", "_secant_8hpp.html", [
      [ "Secant", "classnc_1_1roots_1_1_secant.html", "classnc_1_1roots_1_1_secant" ]
    ] ],
    [ "select.hpp", "select_8hpp.html", "select_8hpp" ],
    [ "setdiff1d.hpp", "setdiff1d_8hpp.html", "setdiff1d_8hpp" ],
    [ "Core/Shape.hpp", "_core_2_shape_8hpp.html", [
      [ "Shape", "classnc_1_1_shape.html", "classnc_1_1_shape" ]
    ] ],
    [ "Functions/Shape.hpp", "_functions_2_shape_8hpp.html", "_functions_2_shape_8hpp" ],
    [ "shuffle.hpp", "shuffle_8hpp.html", "shuffle_8hpp" ],
    [ "sign.hpp", "sign_8hpp.html", "sign_8hpp" ],
    [ "signbit.hpp", "signbit_8hpp.html", "signbit_8hpp" ],
    [ "simpson.hpp", "simpson_8hpp.html", "simpson_8hpp" ],
    [ "sin.hpp", "sin_8hpp.html", "sin_8hpp" ],
    [ "sinc.hpp", "sinc_8hpp.html", "sinc_8hpp" ],
    [ "sinh.hpp", "sinh_8hpp.html", "sinh_8hpp" ],
    [ "size.hpp", "size_8hpp.html", "size_8hpp" ],
    [ "Slice.hpp", "_slice_8hpp.html", [
      [ "Slice", "classnc_1_1_slice.html", "classnc_1_1_slice" ]
    ] ],
    [ "softmax.hpp", "softmax_8hpp.html", "softmax_8hpp" ],
    [ "solve.hpp", "solve_8hpp.html", "solve_8hpp" ],
    [ "sort.hpp", "sort_8hpp.html", "sort_8hpp" ],
    [ "Special.hpp", "_special_8hpp.html", null ],
    [ "spherical_bessel_jn.hpp", "spherical__bessel__jn_8hpp.html", "spherical__bessel__jn_8hpp" ],
    [ "spherical_bessel_yn.hpp", "spherical__bessel__yn_8hpp.html", "spherical__bessel__yn_8hpp" ],
    [ "spherical_hankel_1.hpp", "spherical__hankel__1_8hpp.html", "spherical__hankel__1_8hpp" ],
    [ "spherical_hankel_2.hpp", "spherical__hankel__2_8hpp.html", "spherical__hankel__2_8hpp" ],
    [ "spherical_harmonic.hpp", "spherical__harmonic_8hpp.html", "spherical__harmonic_8hpp" ],
    [ "split.hpp", "split_8hpp.html", "split_8hpp" ],
    [ "sqr.hpp", "sqr_8hpp.html", "sqr_8hpp" ],
    [ "sqrt.hpp", "sqrt_8hpp.html", "sqrt_8hpp" ],
    [ "square.hpp", "square_8hpp.html", "square_8hpp" ],
    [ "stack.hpp", "stack_8hpp.html", "stack_8hpp" ],
    [ "standardNormal.hpp", "standard_normal_8hpp.html", "standard_normal_8hpp" ],
    [ "StaticAsserts.hpp", "_static_asserts_8hpp.html", "_static_asserts_8hpp" ],
    [ "StdComplexOperators.hpp", "_std_complex_operators_8hpp.html", "_std_complex_operators_8hpp" ],
    [ "stdev.hpp", "stdev_8hpp.html", "stdev_8hpp" ],
    [ "StlAlgorithms.hpp", "_stl_algorithms_8hpp.html", "_stl_algorithms_8hpp" ],
    [ "studentT.hpp", "student_t_8hpp.html", "student_t_8hpp" ],
    [ "subtract.hpp", "subtract_8hpp.html", "subtract_8hpp" ],
    [ "sum.hpp", "sum_8hpp.html", "sum_8hpp" ],
    [ "svd.hpp", "svd_8hpp.html", "svd_8hpp" ],
    [ "SVDClass.hpp", "_s_v_d_class_8hpp.html", [
      [ "SVD", "classnc_1_1linalg_1_1_s_v_d.html", "classnc_1_1linalg_1_1_s_v_d" ]
    ] ],
    [ "swap.hpp", "swap_8hpp.html", "swap_8hpp" ],
    [ "swapaxes.hpp", "swapaxes_8hpp.html", "swapaxes_8hpp" ],
    [ "swapCols.hpp", "swap_cols_8hpp.html", "swap_cols_8hpp" ],
    [ "swapRows.hpp", "swap_rows_8hpp.html", "swap_rows_8hpp" ],
    [ "take.hpp", "take_8hpp.html", "take_8hpp" ],
    [ "tan.hpp", "tan_8hpp.html", "tan_8hpp" ],
    [ "tanh.hpp", "tanh_8hpp.html", "tanh_8hpp" ],
    [ "tile.hpp", "tile_8hpp.html", "tile_8hpp" ],
    [ "timeit.hpp", "timeit_8hpp.html", "timeit_8hpp" ],
    [ "Timer.hpp", "_timer_8hpp.html", [
      [ "Timer", "classnc_1_1_timer.html", "classnc_1_1_timer" ]
    ] ],
    [ "tofile.hpp", "tofile_8hpp.html", "tofile_8hpp" ],
    [ "toStlVector.hpp", "to_stl_vector_8hpp.html", "to_stl_vector_8hpp" ],
    [ "trace.hpp", "trace_8hpp.html", "trace_8hpp" ],
    [ "Transforms.hpp", "_transforms_8hpp.html", null ],
    [ "transpose.hpp", "transpose_8hpp.html", "transpose_8hpp" ],
    [ "trapazoidal.hpp", "trapazoidal_8hpp.html", "trapazoidal_8hpp" ],
    [ "trapz.hpp", "trapz_8hpp.html", "trapz_8hpp" ],
    [ "tri.hpp", "tri_8hpp.html", "tri_8hpp" ],
    [ "triangle.hpp", "triangle_8hpp.html", "triangle_8hpp" ],
    [ "trigamma.hpp", "trigamma_8hpp.html", "trigamma_8hpp" ],
    [ "trim_zeros.hpp", "trim__zeros_8hpp.html", "trim__zeros_8hpp" ],
    [ "trimBoundary1d.hpp", "trim_boundary1d_8hpp.html", "trim_boundary1d_8hpp" ],
    [ "trimBoundary2d.hpp", "trim_boundary2d_8hpp.html", "trim_boundary2d_8hpp" ],
    [ "trunc.hpp", "trunc_8hpp.html", "trunc_8hpp" ],
    [ "Types.hpp", "_types_8hpp.html", "_types_8hpp" ],
    [ "TypeTraits.hpp", "_type_traits_8hpp.html", "_type_traits_8hpp" ],
    [ "uniform.hpp", "uniform_8hpp.html", "uniform_8hpp" ],
    [ "uniformFilter.hpp", "uniform_filter_8hpp.html", "uniform_filter_8hpp" ],
    [ "uniformFilter1d.hpp", "uniform_filter1d_8hpp.html", "uniform_filter1d_8hpp" ],
    [ "uniformOnSphere.hpp", "uniform_on_sphere_8hpp.html", "uniform_on_sphere_8hpp" ],
    [ "union1d.hpp", "union1d_8hpp.html", "union1d_8hpp" ],
    [ "unique.hpp", "unique_8hpp.html", "unique_8hpp" ],
    [ "unpackbits.hpp", "unpackbits_8hpp.html", "unpackbits_8hpp" ],
    [ "unwrap.hpp", "unwrap_8hpp.html", "unwrap_8hpp" ],
    [ "Utils.hpp", "_utils_8hpp.html", null ],
    [ "value2str.hpp", "value2str_8hpp.html", "value2str_8hpp" ],
    [ "vander.hpp", "vander_8hpp.html", "vander_8hpp" ],
    [ "var.hpp", "var_8hpp.html", "var_8hpp" ],
    [ "Vec2.hpp", "_vec2_8hpp.html", "_vec2_8hpp" ],
    [ "Vec3.hpp", "_vec3_8hpp.html", "_vec3_8hpp" ],
    [ "Vector.hpp", "_vector_8hpp.html", null ],
    [ "Version.hpp", "_version_8hpp.html", "_version_8hpp" ],
    [ "vsplit.hpp", "vsplit_8hpp.html", "vsplit_8hpp" ],
    [ "vstack.hpp", "vstack_8hpp.html", "vstack_8hpp" ],
    [ "wahbasProblem.hpp", "wahbas_problem_8hpp.html", "wahbas_problem_8hpp" ],
    [ "weibull.hpp", "weibull_8hpp.html", "weibull_8hpp" ],
    [ "where.hpp", "where_8hpp.html", "where_8hpp" ],
    [ "windowExceedances.hpp", "window_exceedances_8hpp.html", "window_exceedances_8hpp" ],
    [ "wrap.hpp", "wrap_8hpp.html", "wrap_8hpp" ],
    [ "wrap1d.hpp", "wrap1d_8hpp.html", "wrap1d_8hpp" ],
    [ "wrap2d.hpp", "wrap2d_8hpp.html", "wrap2d_8hpp" ],
    [ "wrap2Pi.hpp", "wrap2_pi_8hpp.html", "wrap2_pi_8hpp" ],
    [ "zeros.hpp", "zeros_8hpp.html", "zeros_8hpp" ],
    [ "zeros_like.hpp", "zeros__like_8hpp.html", "zeros__like_8hpp" ]
];